{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\n\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: theme.palette.text.disabled\n    }\n  }\n}));\n/**\r\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\r\n * Use this component if you want to display an extra label.\r\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n\n  const {\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    label,\n    labelPlacement = 'end'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    label,\n    labelPlacement\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label.type === Typography || disableTypography ? label : /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\",\n      className: classes.label\n    }, componentsProps.typography, {\n      children: label\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * If `true`, the component appears selected.\r\n   */\n  checked: PropTypes.bool,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The props used for each slot inside.\r\n   * @default {}\r\n   */\n  componentsProps: PropTypes.object,\n\n  /**\r\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\r\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\r\n   * If `true`, the control is disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * If `true`, the label is rendered as it is passed without an additional typography node.\r\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\r\n   * Pass a ref to the `input` element.\r\n   */\n  inputRef: refType,\n\n  /**\r\n   * The text to be used in an enclosing label element.\r\n   */\n  label: PropTypes.node,\n\n  /**\r\n   * The position of the label.\r\n   * @default 'end'\r\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\r\n   * @ignore\r\n   */\n  name: PropTypes.string,\n\n  /**\r\n   * Callback fired when the state is changed.\r\n   *\r\n   * @param {React.SyntheticEvent} event The event source of the callback.\r\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\r\n   */\n  onChange: PropTypes.func,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object,\n\n  /**\r\n   * The value of the component.\r\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","map":{"version":3,"sources":["C:/Users/geord/Documents/GitHub/CSE416-Lavender-Client/node_modules/@mui/material/FormControlLabel/FormControlLabel.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","refType","unstable_composeClasses","composeClasses","useFormControl","Typography","capitalize","styled","useThemeProps","formControlLabelClasses","getFormControlLabelUtilityClasses","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","disabled","labelPlacement","slots","root","label","FormControlLabelRoot","name","slot","overridesResolver","props","styles","theme","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","flexDirection","color","palette","text","FormControlLabel","forwardRef","inProps","ref","className","componentsProps","control","disabledProp","disableTypography","other","muiFormControl","controlProps","forEach","key","children","cloneElement","type","component","typography","process","env","NODE_ENV","propTypes","checked","bool","object","string","element","isRequired","inputRef","node","oneOf","onChange","func","sx","value","any"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { refType } from '@mui/utils';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\r\nimport { useFormControl } from '../FormControl';\r\nimport Typography from '../Typography';\r\nimport capitalize from '../utils/capitalize';\r\nimport styled from '../styles/styled';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\n\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes,\r\n    disabled,\r\n    labelPlacement\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`],\r\n    label: ['label', disabled && 'disabled']\r\n  };\r\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\r\n};\r\n\r\nexport const FormControlLabelRoot = styled('label', {\r\n  name: 'MuiFormControlLabel',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      ownerState\r\n    } = props;\r\n    return [{\r\n      [`& .${formControlLabelClasses.label}`]: styles.label\r\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\r\n  }\r\n})(({\r\n  theme,\r\n  ownerState\r\n}) => _extends({\r\n  display: 'inline-flex',\r\n  alignItems: 'center',\r\n  cursor: 'pointer',\r\n  // For correct alignment with the text.\r\n  verticalAlign: 'middle',\r\n  WebkitTapHighlightColor: 'transparent',\r\n  marginLeft: -11,\r\n  marginRight: 16,\r\n  // used for row presentation of radio/checkbox\r\n  [`&.${formControlLabelClasses.disabled}`]: {\r\n    cursor: 'default'\r\n  }\r\n}, ownerState.labelPlacement === 'start' && {\r\n  flexDirection: 'row-reverse',\r\n  marginLeft: 16,\r\n  // used for row presentation of radio/checkbox\r\n  marginRight: -11\r\n}, ownerState.labelPlacement === 'top' && {\r\n  flexDirection: 'column-reverse',\r\n  marginLeft: 16\r\n}, ownerState.labelPlacement === 'bottom' && {\r\n  flexDirection: 'column',\r\n  marginLeft: 16\r\n}, {\r\n  [`& .${formControlLabelClasses.label}`]: {\r\n    [`&.${formControlLabelClasses.disabled}`]: {\r\n      color: theme.palette.text.disabled\r\n    }\r\n  }\r\n}));\r\n/**\r\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\r\n * Use this component if you want to display an extra label.\r\n */\r\n\r\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiFormControlLabel'\r\n  });\r\n\r\n  const {\r\n    className,\r\n    componentsProps = {},\r\n    control,\r\n    disabled: disabledProp,\r\n    disableTypography,\r\n    label,\r\n    labelPlacement = 'end'\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, _excluded);\r\n\r\n  const muiFormControl = useFormControl();\r\n  let disabled = disabledProp;\r\n\r\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\r\n    disabled = control.props.disabled;\r\n  }\r\n\r\n  if (typeof disabled === 'undefined' && muiFormControl) {\r\n    disabled = muiFormControl.disabled;\r\n  }\r\n\r\n  const controlProps = {\r\n    disabled\r\n  };\r\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\r\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\r\n      controlProps[key] = props[key];\r\n    }\r\n  });\r\n\r\n  const ownerState = _extends({}, props, {\r\n    disabled,\r\n    label,\r\n    labelPlacement\r\n  });\r\n\r\n  const classes = useUtilityClasses(ownerState);\r\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\r\n    className: clsx(classes.root, className),\r\n    ownerState: ownerState,\r\n    ref: ref\r\n  }, other, {\r\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label.type === Typography || disableTypography ? label : /*#__PURE__*/_jsx(Typography, _extends({\r\n      component: \"span\",\r\n      className: classes.label\r\n    }, componentsProps.typography, {\r\n      children: label\r\n    }))]\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * If `true`, the component appears selected.\r\n   */\r\n  checked: PropTypes.bool,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The props used for each slot inside.\r\n   * @default {}\r\n   */\r\n  componentsProps: PropTypes.object,\r\n\r\n  /**\r\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\r\n   */\r\n  control: PropTypes.element.isRequired,\r\n\r\n  /**\r\n   * If `true`, the control is disabled.\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the label is rendered as it is passed without an additional typography node.\r\n   */\r\n  disableTypography: PropTypes.bool,\r\n\r\n  /**\r\n   * Pass a ref to the `input` element.\r\n   */\r\n  inputRef: refType,\r\n\r\n  /**\r\n   * The text to be used in an enclosing label element.\r\n   */\r\n  label: PropTypes.node,\r\n\r\n  /**\r\n   * The position of the label.\r\n   * @default 'end'\r\n   */\r\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  name: PropTypes.string,\r\n\r\n  /**\r\n   * Callback fired when the state is changed.\r\n   *\r\n   * @param {React.SyntheticEvent} event The event source of the callback.\r\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\r\n   */\r\n  onChange: PropTypes.func,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object,\r\n\r\n  /**\r\n   * The value of the component.\r\n   */\r\n  value: PropTypes.any\r\n} : void 0;\r\nexport default FormControlLabel;"]},"metadata":{},"sourceType":"module"}