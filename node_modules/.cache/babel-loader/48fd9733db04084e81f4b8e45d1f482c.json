{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geord\\\\Documents\\\\GitHub\\\\CSE416-Lavender-Client\\\\src\\\\pages\\\\QuizCreator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport { Box, Button, FormControl, InputBase, TextField } from '@mui/material';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport * as constants from '../components/constants';\nimport Questions from '../components/Questions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  QuizContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    width: '60vw'\n  },\n  Opt: {\n    display: 'inline-block',\n    width: '60vw',\n    paddingLeft: 10,\n    paddingRight: 10,\n    alignItems: 'center'\n  },\n  duration: {\n    display: 'inline-block',\n    float: 'left',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  save: {\n    display: 'inline-block',\n    float: 'right'\n  },\n  title: {\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n    height: 60,\n    backgroundColor: \"#7d65c0\"\n  },\n  quizForm: {\n    borderRadius: 15,\n    borderTopLeftRadius: 15\n  },\n  noBorder: {\n    border: 'none'\n  }\n}));\nexport default function QuizCreate(props) {\n  _s();\n\n  const [state, setState] = useState({\n    quiz_name: ''\n  });\n  const [questions, setQuestions] = useState([]);\n  const classes = useStyles();\n  const location = useLocation();\n  const history = useHistory();\n  const questionsRef = useRef();\n\n  const onSave = e => {\n    axios.put(`${constants.API_PATH}/quiz/${props.match.params.quiz_id}/creator`, {\n      quiz_fields: { ...state\n      }\n    }).then(res => {// TODO: DO something after udpate\n    }).catch(err => {\n      console.log('PUT on Save: ', err);\n    });\n    let questions = questionsRef.current.getQuestions();\n\n    for (let i = 0; i < questions.length; i++) {\n      console.log(questions[i]);\n      axios.put(`${constants.API_PATH}/quiz/${props.match.params.quiz_id}/question`, {\n        question_fields: {\n          question_id: i,\n          quiz_id: props.match.params.quiz_id,\n          question_text: questions[i]\n        }\n      }).then(res => {// TODO: DO something after udpate\n      }).catch(err => {\n        console.log('PUT on Save: ', err);\n      });\n    }\n  };\n\n  const style = {\n    backgroundColor: '#ACACE1',\n    marginLeft: 10,\n    marginBottom: 10,\n    color: 'black'\n  };\n\n  const onDelete = e => {\n    axios.delete(`${constants.API_PATH}/quiz/${props.match.params.quiz_id}`).then(res => {\n      history.goBack();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onTitleChange = e => {\n    setState({ ...state,\n      quiz_name: e.target.value\n    });\n  };\n\n  useEffect(() => {\n    if (props.location.state == null) {\n      axios.get(`${constants.API_PATH}/quiz/${props.match.params.quiz_id}`).then(res => {\n        //console.log(res);\n        setState({\n          quiz_name: res.data.quiz.quiz_name\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    } else if (props.location.state) {\n      setState({\n        quiz_name: props.location.state.quiz.quiz_name\n      });\n    }\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.QuizContainer,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.Opt,\n      mt: 10,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.duration,\n        children: \"Duration: INF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"contained\",\n        style: style,\n        className: classes.save,\n        onClick: onDelete,\n        children: \"Delete Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"contained\",\n        style: style,\n        className: classes.save,\n        onClick: onSave,\n        children: \"Save Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.quizform,\n      children: [/*#__PURE__*/_jsxDEV(InputBase, {\n        className: classes.title,\n        inputProps: {\n          min: 0,\n          style: {\n            textAlign: 'center',\n            fontSize: 22,\n            paddingTop: 0,\n            paddingBottom: 0,\n            marginTop: 10\n          }\n        },\n        value: state.quiz_name,\n        onChange: onTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Questions, {\n        ref: (props, questionsRef)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizCreate, \"b2wvP0eQE8A0LGmBiYTHI+OBqPk=\", false, function () {\n  return [useStyles, useLocation, useHistory];\n});\n\n_c = QuizCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizCreate\");","map":{"version":3,"sources":["C:/Users/geord/Documents/GitHub/CSE416-Lavender-Client/src/pages/QuizCreator.js"],"names":["React","useState","useEffect","useRef","makeStyles","styled","Box","Button","FormControl","InputBase","TextField","useHistory","useLocation","axios","constants","Questions","useStyles","theme","QuizContainer","display","flexDirection","justifyContent","width","Opt","paddingLeft","paddingRight","alignItems","duration","float","fontSize","fontWeight","save","title","borderTopLeftRadius","borderTopRightRadius","height","backgroundColor","quizForm","borderRadius","noBorder","border","QuizCreate","props","state","setState","quiz_name","questions","setQuestions","classes","location","history","questionsRef","onSave","e","put","API_PATH","match","params","quiz_id","quiz_fields","then","res","catch","err","console","log","current","getQuestions","i","length","question_fields","question_id","question_text","style","marginLeft","marginBottom","color","onDelete","delete","goBack","onTitleChange","target","value","get","data","quiz","quizform","min","textAlign","paddingTop","paddingBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { makeStyles, styled } from '@material-ui/core/styles';\r\nimport { Box, Button, FormControl, InputBase, TextField } from '@mui/material'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport * as constants from '../components/constants';\r\nimport Questions from '../components/Questions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  QuizContainer:{\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    width: '60vw'\r\n  },\r\n  Opt:{\r\n    display: 'inline-block',\r\n    width: '60vw',\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    alignItems: 'center'\r\n  },\r\n  duration:{\r\n    display: 'inline-block',\r\n    float: 'left',\r\n    fontSize: 16,\r\n    fontWeight: 'bold'\r\n  },\r\n  save:{\r\n    display: 'inline-block',\r\n    float: 'right',\r\n  },\r\n  title:{\r\n    borderTopLeftRadius: 15, \r\n    borderTopRightRadius: 15, \r\n    height: 60,\r\n    backgroundColor: \"#7d65c0\",\r\n  },\r\n  quizForm:{\r\n    borderRadius: 15,\r\n    borderTopLeftRadius: 15\r\n  },\r\n  noBorder: {\r\n    border: 'none',\r\n  }\r\n}))\r\n\r\n\r\nexport default function QuizCreate(props) {\r\n  const [state, setState] = useState({\r\n    quiz_name: '',\r\n  })\r\n  const [questions, setQuestions] = useState([]);\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const questionsRef = useRef();\r\n\r\n  const onSave = (e) => {\r\n    axios.put(`${constants.API_PATH}/quiz/${props.match.params.quiz_id}/creator`, {\r\n      quiz_fields: {...state}\r\n    }).then( res => {\r\n      // TODO: DO something after udpate\r\n    }).catch( err => {\r\n      console.log('PUT on Save: ', err);\r\n    })\r\n    let questions = questionsRef.current.getQuestions();\r\n    for ( let i = 0; i < questions.length; i++) {\r\n      console.log(questions[i])\r\n      axios.put(`${constants.API_PATH}/quiz/${props.match.params.quiz_id}/question`, {\r\n        question_fields: {\r\n          question_id: i,\r\n          quiz_id: props.match.params.quiz_id,\r\n          question_text: questions[i]\r\n        }\r\n      }).then( res => {\r\n        // TODO: DO something after udpate\r\n        \r\n      }).catch( err => {\r\n        console.log('PUT on Save: ', err);\r\n      })\r\n    }\r\n  };\r\n\r\n  const style = {\r\n    backgroundColor: '#ACACE1',\r\n    marginLeft: 10,\r\n    marginBottom: 10,\r\n    color: 'black'\r\n  }\r\n\r\n\r\n  const onDelete = (e) => {\r\n    axios.delete(`${constants.API_PATH}/quiz/${props.match.params.quiz_id}`)\r\n      .then( res => {\r\n        history.goBack()\r\n      }).catch( err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  const onTitleChange = (e) => {\r\n    setState({...state, quiz_name:e.target.value});\r\n  }\r\n  \r\n\r\n  useEffect(() => {\r\n    if(props.location.state == null){\r\n      axios.get(`${constants.API_PATH}/quiz/${props.match.params.quiz_id}`)\r\n      .then( res => {\r\n        //console.log(res);\r\n        setState({quiz_name: res.data.quiz.quiz_name})\r\n      }).catch( err => {\r\n        console.log(err);\r\n      })\r\n    }\r\n    else if(props.location.state){\r\n      setState({quiz_name: props.location.state.quiz.quiz_name})\r\n    }\r\n  }, [props]);\r\n\r\n  return (\r\n    <Box className={classes.QuizContainer}>\r\n      <Box className={classes.Opt} mt={10} >\r\n        <div className={classes.duration}>Duration: INF</div>\r\n        <Button size='small' variant='contained' style={style} className={classes.save}  onClick={onDelete}>Delete Quiz</Button>\r\n        <Button size='small' variant='contained' style={style} className={classes.save}  onClick={onSave}>Save Quiz</Button>\r\n      </Box>\r\n      <FormControl className={classes.quizform}>\r\n        <InputBase className={classes.title}\r\n          inputProps={{min: 0, \r\n            style: { textAlign: 'center', fontSize: 22, paddingTop:0, paddingBottom:0,\r\n              marginTop:10}}}\r\n          value={state.quiz_name}\r\n          onChange={onTitleChange}/>\r\n          <Questions ref={props, questionsRef}/>      \r\n      </FormControl>\r\n    </Box>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}