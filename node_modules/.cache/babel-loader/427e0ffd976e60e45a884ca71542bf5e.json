{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _GlobalStyles;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = {\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n};\nexport const body = theme => _extends({\n  color: theme.palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: theme.palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: theme.palette.common.white\n  }\n});\nexport const styles = theme => {\n  var _theme$components, _theme$components$Mui;\n\n  let defaultStyles = {\n    html,\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: theme.palette.background.default\n      }\n    })\n  };\n  const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;\n\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n\n  return defaultStyles;\n};\n/**\r\n * Kickstart an elegant, consistent, and simple baseline to build upon.\r\n */\n\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [_GlobalStyles || (_GlobalStyles = /*#__PURE__*/_jsx(GlobalStyles, {\n      styles: styles\n    })), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * You can wrap a node.\r\n   */\n  children: PropTypes.node\n} : void 0;\nexport default CssBaseline;","map":{"version":3,"sources":["C:/Users/geord/Documents/GitHub/CSE416-Lavender-Client/node_modules/@mui/material/CssBaseline/CssBaseline.js"],"names":["_extends","_GlobalStyles","React","PropTypes","useThemeProps","GlobalStyles","jsx","_jsx","jsxs","_jsxs","html","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","body","theme","color","palette","text","primary","typography","body1","backgroundColor","background","default","common","white","styles","_theme$components","_theme$components$Mui","defaultStyles","fontWeight","fontWeightBold","margin","themeOverrides","components","MuiCssBaseline","styleOverrides","CssBaseline","inProps","props","name","children","Fragment","process","env","NODE_ENV","propTypes","node"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\n\r\nvar _GlobalStyles;\r\n\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport GlobalStyles from '../GlobalStyles';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nexport const html = {\r\n  WebkitFontSmoothing: 'antialiased',\r\n  // Antialiasing.\r\n  MozOsxFontSmoothing: 'grayscale',\r\n  // Antialiasing.\r\n  // Change from `box-sizing: content-box` so that `width`\r\n  // is not affected by `padding` or `border`.\r\n  boxSizing: 'border-box',\r\n  // Fix font resize problem in iOS\r\n  WebkitTextSizeAdjust: '100%'\r\n};\r\nexport const body = theme => _extends({\r\n  color: theme.palette.text.primary\r\n}, theme.typography.body1, {\r\n  backgroundColor: theme.palette.background.default,\r\n  '@media print': {\r\n    // Save printer ink.\r\n    backgroundColor: theme.palette.common.white\r\n  }\r\n});\r\nexport const styles = theme => {\r\n  var _theme$components, _theme$components$Mui;\r\n\r\n  let defaultStyles = {\r\n    html,\r\n    '*, *::before, *::after': {\r\n      boxSizing: 'inherit'\r\n    },\r\n    'strong, b': {\r\n      fontWeight: theme.typography.fontWeightBold\r\n    },\r\n    body: _extends({\r\n      margin: 0\r\n    }, body(theme), {\r\n      // Add support for document.body.requestFullScreen().\r\n      // Other elements, if background transparent, are not supported.\r\n      '&::backdrop': {\r\n        backgroundColor: theme.palette.background.default\r\n      }\r\n    })\r\n  };\r\n  const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;\r\n\r\n  if (themeOverrides) {\r\n    defaultStyles = [defaultStyles, themeOverrides];\r\n  }\r\n\r\n  return defaultStyles;\r\n};\r\n/**\r\n * Kickstart an elegant, consistent, and simple baseline to build upon.\r\n */\r\n\r\nfunction CssBaseline(inProps) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiCssBaseline'\r\n  });\r\n  const {\r\n    children\r\n  } = props;\r\n  return /*#__PURE__*/_jsxs(React.Fragment, {\r\n    children: [_GlobalStyles || (_GlobalStyles = /*#__PURE__*/_jsx(GlobalStyles, {\r\n      styles: styles\r\n    })), children]\r\n  });\r\n}\r\n\r\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * You can wrap a node.\r\n   */\r\n  children: PropTypes.node\r\n} : void 0;\r\nexport default CssBaseline;"]},"metadata":{},"sourceType":"module"}