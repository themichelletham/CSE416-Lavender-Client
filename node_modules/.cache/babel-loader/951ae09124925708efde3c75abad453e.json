{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geord\\\\Documents\\\\GitHub\\\\CSE416-Lavender-Client\\\\src\\\\components\\\\Answers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, forwardRef, useRef, useImperativeHandle } from 'react';\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/HighlightOff';\nimport { Box, Button, FormControl, InputBase, TextField, IconButton, InputAdornment, endAdornment, FilledInput } from '@mui/material';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport clsx from \"clsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  answerWrapper: {\n    paddingTop: 10,\n    paddingLeft: 50,\n    paddingRight: 31,\n    fontSize: 22,\n    //fullWidth: 30,\n    borderRadius: '70px'\n  },\n  answerText: {\n    textAlign: 'left',\n    marginTop: 10,\n    marginButtom: 10,\n    marginLeft: 30,\n    width: '45vw'\n  } //   toolbar: theme.mixins.toolbar,\n\n}));\n\nfunction Answers(props, ref) {\n  _s();\n\n  const classes = useStyles();\n  const [answers, setAnswers] = useState([]);\n  const [answer, setAnswerText] = useState({\n    answer_text: ''\n  });\n  useImperativeHandle(ref, () => ({\n    getanswers() {\n      return answers;\n    }\n\n  })); //cretes new textbox\n\n  const addAnswer = e => {\n    let currentanswers = [...answers];\n    let newanswer = \"New answer\";\n    currentanswers.push(newanswer);\n    setAnswers(currentanswers);\n  };\n\n  const removeAnswer = index => e => {\n    let currentanswers = [...answers];\n    currentanswers.splice(index, 1);\n    setAnswers(currentanswers);\n  }; //updates list of answers\n\n\n  const onAnswerTextChange = index => e => {\n    let tempAnswers = [...answers];\n    setAnswerText({ ...answer.answer_text,\n      answer_text: e.target.value\n    });\n    tempAnswers[index] = e.target.value;\n    setAnswers(tempAnswers);\n  };\n\n  const deleteStyle = {\n    backgroundColor: '#8A8AEE',\n    marginLeft: 10,\n    marginBottom: 10,\n    color: 'black',\n    float: \"right\",\n    borderRadius: 20\n  };\n  const addStyle = {\n    backgroundColor: '#8A8AEE',\n    marginLeft: 10,\n    marginBottom: 10,\n    marginRight: 10,\n    color: 'black',\n    float: \"right\",\n    borderRadius: 20\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.preset,\n    disableElevation: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolbar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), answers.map((answer, index) => {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.answerWrapper,\n        disableElevation: true,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.answerText,\n          value: answers[index],\n          onChange: onAnswerTextChange(index),\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              variant: \"contained\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: removeAnswer(index),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                  disableElevation: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 26\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this)\n          },\n          inputProps: {\n            style: {\n              padding: 8,\n              fontSize: 20\n            }\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Button, {\n      style: addStyle,\n      variant: \"contained\",\n      onClick: addAnswer,\n      disableElevation: true,\n      children: \"+ Add answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Answers, \"GNcZtJ5sOWwmwnTNVyAEJfwwyvs=\", false, function () {\n  return [useStyles, useImperativeHandle];\n});\n\n_c = Answers;\nexport default _c2 = /*#__PURE__*/forwardRef(Answers);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Answers\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/geord/Documents/GitHub/CSE416-Lavender-Client/src/components/Answers.js"],"names":["React","useState","useEffect","forwardRef","useRef","useImperativeHandle","makeStyles","styled","EditIcon","DeleteIcon","Box","Button","FormControl","InputBase","TextField","IconButton","InputAdornment","endAdornment","FilledInput","useHistory","useLocation","clsx","useStyles","theme","answerWrapper","paddingTop","paddingLeft","paddingRight","fontSize","borderRadius","answerText","textAlign","marginTop","marginButtom","marginLeft","width","Answers","props","ref","classes","answers","setAnswers","answer","setAnswerText","answer_text","getanswers","addAnswer","e","currentanswers","newanswer","push","removeAnswer","index","splice","onAnswerTextChange","tempAnswers","target","value","deleteStyle","backgroundColor","marginBottom","color","float","addStyle","marginRight","preset","toolbar","map","style","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, forwardRef, useRef, useImperativeHandle } from 'react'\r\nimport { makeStyles, styled } from '@material-ui/core/styles';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/HighlightOff';\r\nimport { Box, Button, FormControl, InputBase, TextField, IconButton, InputAdornment, endAdornment, FilledInput } from '@mui/material'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  answerWrapper: {\r\n    paddingTop: 10, \r\n    paddingLeft: 50,\r\n    paddingRight: 31,\r\n    fontSize: 22,\r\n    //fullWidth: 30,\r\n    borderRadius: '70px',\r\n  },\r\n  answerText: {\r\n    textAlign: 'left',  \r\n    marginTop: 10,\r\n    marginButtom: 10,\r\n    marginLeft: 30,\r\n    width: '45vw'\r\n\r\n  },\r\n//   toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\nfunction Answers(props, ref) {\r\n  const classes = useStyles();\r\n\r\n  const [answers, setAnswers] = useState([]);\r\n  const [answer, setAnswerText] = useState({\r\n    answer_text: '',\r\n  })\r\n\r\n  useImperativeHandle( ref, () => ({\r\n    getanswers() {\r\n      return answers;\r\n    }\r\n  }));\r\n  \r\n    //cretes new textbox\r\n  const addAnswer = (e) => {\r\n    let currentanswers = [...answers]\r\n    let newanswer = \"New answer\";\r\n    currentanswers.push(newanswer);\r\n    setAnswers(currentanswers);\r\n  }\r\n\r\n  const removeAnswer = index => e => {\r\n    let currentanswers = [...answers]\r\n    currentanswers.splice(index,1)\r\n    setAnswers(currentanswers);\r\n  }\r\n\r\n    //updates list of answers\r\n    const onAnswerTextChange = index => e => {\r\n      let tempAnswers = [...answers];\r\n      setAnswerText({...answer.answer_text, answer_text:e.target.value});\r\n      tempAnswers[index] = e.target.value;\r\n      setAnswers(tempAnswers);\r\n    }\r\n\r\n    const deleteStyle = {\r\n      backgroundColor: '#8A8AEE',\r\n      marginLeft: 10,\r\n      marginBottom: 10,\r\n      color: 'black',\r\n      float: \"right\",\r\n      borderRadius: 20\r\n    }\r\n\r\n    const addStyle = {\r\n      backgroundColor: '#8A8AEE',\r\n      marginLeft: 10,\r\n      marginBottom: 10,\r\n      marginRight: 10,\r\n      color: 'black',\r\n      float: \"right\",\r\n      borderRadius: 20\r\n    }\r\n\r\n      \r\n    return(\r\n      <Box className={classes.preset} disableElevation>\r\n        <div className={classes.toolbar} />\r\n        {answers.map((answer, index) =>{\r\n          return (\r\n          <Box className={classes.answerWrapper} key={index} disableElevation> \r\n            <TextField className={classes.answerText}\r\n                key={index}\r\n                value={answers[index]}\r\n                onChange={onAnswerTextChange(index)}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\" variant='contained'>\r\n                      <IconButton onClick={removeAnswer(index)}>\r\n                         <DeleteIcon disableElevation/>\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n                inputProps={{\r\n                style: {\r\n                    padding: 8,\r\n                    fontSize: 20, \r\n                }, \r\n            }}\r\n          />\r\n          </Box>\r\n          );\r\n        })}\r\n        <Button style={addStyle} variant='contained' onClick={addAnswer} disableElevation >+ Add answer</Button>\r\n      </Box>\r\n    );\r\n}\r\n\r\nexport default forwardRef(Answers);"]},"metadata":{},"sourceType":"module"}