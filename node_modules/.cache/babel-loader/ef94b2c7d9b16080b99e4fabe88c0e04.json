{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geord\\\\Documents\\\\GitHub\\\\CSE416-Lavender-Client\\\\src\\\\components\\\\Answers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, forwardRef, useRef, useImperativeHandle } from 'react';\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport { Box, Button, FormControl, InputBase, TextField } from '@mui/material';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  answerWrapper: {\n    paddingLeft: 50,\n    paddingRight: 31,\n    paddingBottom: 10,\n    fontSize: 22\n  },\n  answerText: {\n    textAlign: 'left',\n    marginTop: 10,\n    width: '48vw'\n  } //   toolbar: theme.mixins.toolbar,\n\n}));\n\nfunction Answers(props, ref) {\n  _s();\n\n  const classes = useStyles();\n  const [answers, setAnswers] = useState([]);\n  const [answer, setAnswerText] = useState({\n    answer_text: ''\n  });\n  useImperativeHandle(ref, () => ({\n    getanswers() {\n      return answers;\n    }\n\n  })); //cretes new textbox\n\n  const addAnswer = e => {\n    let currentanswers = [...answers];\n    let newanswer = \"New answer\";\n    currentanswers.push(newanswer);\n    setAnswers(currentanswers);\n  };\n\n  const removeAnswer = index => e => {\n    let currentanswers = [...answers];\n    currentanswers.splice(index, 1);\n    setAnswers(currentanswers);\n  }; //updates list of answers\n\n\n  const onAnswerTextChange = index => e => {\n    let tempAnswers = [...answers];\n    setAnswerText({ ...answer.answer_text,\n      answer_text: e.target.value\n    });\n    tempAnswers[index] = e.target.value;\n    setAnswers(tempAnswers);\n  };\n\n  const deleteStyle = {\n    backgroundColor: '#8A8AEE',\n    marginLeft: 10,\n    marginBottom: 10,\n    color: 'black',\n    float: \"right\"\n  };\n  const addStyle = {\n    backgroundColor: '#8A8AEE',\n    marginLeft: 10,\n    marginBottom: 10,\n    marginRight: 10,\n    color: 'black',\n    float: \"right\"\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolbar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), answers.map((answer, index) => {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.answerWrapper,\n        disableElevation: true,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.answerText,\n          value: answers[index],\n          onChange: onAnswerTextChange(index),\n          inputProps: {\n            style: {\n              padding: 5,\n              fontSize: 20\n            }\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: deleteStyle,\n          variant: \"contained\",\n          onClick: removeAnswer(index),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Button, {\n      style: addStyle,\n      variant: \"contained\",\n      onClick: addAnswer,\n      children: \"+ Add answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Answers, \"GNcZtJ5sOWwmwnTNVyAEJfwwyvs=\", false, function () {\n  return [useStyles, useImperativeHandle];\n});\n\n_c = Answers;\nexport default _c2 = /*#__PURE__*/forwardRef(Answers);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Answers\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/geord/Documents/GitHub/CSE416-Lavender-Client/src/components/Answers.js"],"names":["React","useState","useEffect","forwardRef","useRef","useImperativeHandle","makeStyles","styled","Box","Button","FormControl","InputBase","TextField","useHistory","useLocation","useStyles","theme","answerWrapper","paddingLeft","paddingRight","paddingBottom","fontSize","answerText","textAlign","marginTop","width","Answers","props","ref","classes","answers","setAnswers","answer","setAnswerText","answer_text","getanswers","addAnswer","e","currentanswers","newanswer","push","removeAnswer","index","splice","onAnswerTextChange","tempAnswers","target","value","deleteStyle","backgroundColor","marginLeft","marginBottom","color","float","addStyle","marginRight","toolbar","map","style","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, forwardRef, useRef, useImperativeHandle } from 'react'\r\nimport { makeStyles, styled } from '@material-ui/core/styles';\r\nimport { Box, Button, FormControl, InputBase, TextField } from '@mui/material'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  answerWrapper: {\r\n    paddingLeft: 50,\r\n    paddingRight: 31,\r\n    paddingBottom: 10,\r\n    fontSize: 22,\r\n  },\r\n  answerText: {\r\n    textAlign: 'left',  \r\n    marginTop:10,\r\n    width: '48vw',\r\n  },\r\n//   toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\nfunction Answers(props, ref) {\r\n  const classes = useStyles();\r\n\r\n  const [answers, setAnswers] = useState([]);\r\n  const [answer, setAnswerText] = useState({\r\n    answer_text: '',\r\n  })\r\n\r\n  useImperativeHandle( ref, () => ({\r\n    getanswers() {\r\n      return answers;\r\n    }\r\n  }));\r\n  \r\n    //cretes new textbox\r\n  const addAnswer = (e) => {\r\n    let currentanswers = [...answers]\r\n    let newanswer = \"New answer\";\r\n    currentanswers.push(newanswer);\r\n    setAnswers(currentanswers);\r\n  }\r\n\r\n  const removeAnswer = index => e => {\r\n    let currentanswers = [...answers]\r\n    currentanswers.splice(index,1)\r\n    setAnswers(currentanswers);\r\n  }\r\n\r\n    //updates list of answers\r\n    const onAnswerTextChange = index => e => {\r\n      let tempAnswers = [...answers];\r\n      setAnswerText({...answer.answer_text, answer_text:e.target.value});\r\n      tempAnswers[index] = e.target.value;\r\n      setAnswers(tempAnswers);\r\n    }\r\n\r\n    const deleteStyle = {\r\n      backgroundColor: '#8A8AEE',\r\n      marginLeft: 10,\r\n      marginBottom: 10,\r\n      color: 'black',\r\n      float: \"right\"\r\n    }\r\n\r\n    const addStyle = {\r\n      backgroundColor: '#8A8AEE',\r\n      marginLeft: 10,\r\n      marginBottom: 10,\r\n      marginRight: 10,\r\n      color: 'black',\r\n      float: \"right\"\r\n    }\r\n      \r\n    return(\r\n      <Box>\r\n      <div className={classes.toolbar} />\r\n      { answers.map((answer, index) =>{\r\n          return (\r\n          <Box className={classes.answerWrapper} key={index} disableElevation> \r\n            <TextField className={classes.answerText}\r\n                key={index}\r\n                value={answers[index]}\r\n                onChange={onAnswerTextChange(index)}\r\n                inputProps={{\r\n                style: {\r\n                    padding: 5,\r\n                    fontSize: 20,\r\n                }\r\n            }}\r\n          />\r\n            <Button style={deleteStyle} variant='contained' onClick={removeAnswer(index)}>X</Button>\r\n          </Box>\r\n          );\r\n        })}\r\n        <Button style={addStyle} variant='contained' onClick={addAnswer} >+ Add answer</Button>\r\n      </Box>\r\n    );\r\n}\r\n\r\nexport default forwardRef(Answers);"]},"metadata":{},"sourceType":"module"}