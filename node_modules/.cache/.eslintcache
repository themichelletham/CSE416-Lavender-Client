[{"C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\index.js":"1","C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\App.js":"2","C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\reportWebVitals.js":"3","C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\components\\NavBar.js":"4","C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\components\\constants.js":"5","C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\pages\\Leaderboard.js":"6","C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\pages\\QuizCreator.js":"7","C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\pages\\Home.js":"8","C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\components\\Sidebar.js":"9","C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\components\\Questions.js":"10","C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\components\\Leaderboard.js":"11","C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\pages\\Platform.js":"12","C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\pages\\Profile.js":"13","C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\components\\PlatformLead.js":"14"},{"size":494,"mtime":1634912252029,"results":"15","hashOfConfig":"16"},{"size":690,"mtime":1634912252025,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1634912252032,"results":"18","hashOfConfig":"16"},{"size":3113,"mtime":1634912252027,"results":"19","hashOfConfig":"16"},{"size":99,"mtime":1635316380962,"results":"20","hashOfConfig":"16"},{"size":375,"mtime":1634912252030,"results":"21","hashOfConfig":"16"},{"size":4026,"mtime":1635316380963,"results":"22","hashOfConfig":"16"},{"size":1564,"mtime":1635316380963,"results":"23","hashOfConfig":"16"},{"size":3638,"mtime":1634912252028,"results":"24","hashOfConfig":"16"},{"size":2434,"mtime":1635317188560,"results":"25","hashOfConfig":"16"},{"size":2472,"mtime":1634912252026,"results":"26","hashOfConfig":"16"},{"size":246,"mtime":1634912252031,"results":"27","hashOfConfig":"16"},{"size":147,"mtime":1634912252031,"results":"28","hashOfConfig":"16"},{"size":1553,"mtime":1634912252027,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16gv8gw",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\index.js",[],"C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\App.js",["64","65","66"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport {BrowserRouter as Router, Route, Switch, Link} from 'react-router-dom';\r\nimport NavBar from './components/NavBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: { \r\n    minHeight: '100vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    backgroundColor: \"#E6E6FA\",\r\n    backgroundRepeat: \"no-repeat\"\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Router>\r\n      <div className = {classes.root}> \r\n        <CssBaseline/> \r\n        <NavBar/>\r\n      </div> \r\n    </Router>\r\n  ); \r\n}\r\n","C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\reportWebVitals.js",[],"C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\components\\NavBar.js",["67","68"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Box, IconButton, Button, Toolbar } from '@material-ui/core';\r\nimport sproutLogo from \"../images/sprout.png\";\r\nimport googleLogin from \"../images/google-login-button.png\";\r\nimport { BrowserRouter as Router, Route, Switch, Link, useHistory } from 'react-router-dom';\r\nimport SearchBar from 'material-ui-search-bar'\r\nimport { grey } from '@material-ui/core/colors';\r\nimport Home from \"../pages/Home\"\r\nimport Leaderboard from \"../pages/Leaderboard\"\r\nimport QuizCreate from '../pages/QuizCreator';\r\nimport * as constants from '../components/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  AppBar: {\r\n    display: 'inline-block',\r\n    position: 'fixed',\r\n    backgroundColor: \"#241452\",\r\n    height: 63,\r\n    zIndex: 1250,\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  icon: {\r\n    float: 'left',\r\n    marginLeft: \"20px\",\r\n  },\r\n  leader: {\r\n    float: 'right',\r\n    color: \"#FFFFFF\"\r\n  },\r\n  google: {\r\n    float: 'right',\r\n\r\n  },\r\n  search: {\r\n    border: 1,\r\n    borderColor: grey,\r\n    borderRadius: 30,\r\n    margin: '0 auto',\r\n    width: 600,\r\n    height: 35,\r\n  }\r\n}));\r\n\r\nexport default function NavBar() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const onCreateQuiz = (e) => {\r\n    e.preventDefault();\r\n    axios.post(`${constants.API_PATH}/quiz`, {\r\n      quiz_fields: {\r\n        platform_id: 0,\r\n        quiz_name: 'Untitled',\r\n        time_limit: null\r\n      }\r\n    }).then(res => {\r\n      console.log(res)\r\n      if (res.status == 201) {\r\n        console.log('yes')\r\n        history.push('/quiz/creator/' + res.data.quiz_id, {\r\n          quiz: { ...res.data }\r\n        });\r\n      }\r\n    }).catch(err => {\r\n      console.log('Create Quiz Button: ', err);\r\n    })\r\n  }\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', flexGrow: 1, justifyContent: 'start' }}>\r\n      <div className={classes.toolbar} />\r\n      <AppBar className={classes.AppBar} elevation={0}>\r\n        <Toolbar>\r\n          <Link to=\"/\"><IconButton p={50} className={classes.icon}>\r\n            <img float='left' width=\"90\" height=\"50\" alt=\"sproutlogo\" src={sproutLogo} /></IconButton>\r\n          </Link>\r\n          <SearchBar className={classes.search} placeholder=\"Search...\" />\r\n          <Button className={classes.leader} onClick={onCreateQuiz}>Create Quiz</Button>\r\n          <Link to='/leaderboard'>\r\n            <Button className={classes.leader}>Leaderboard</Button>\r\n          </Link>\r\n          <IconButton className={classes.google}>\r\n            <img width=\"155\" height=\"35\" alt=\"google-signin\" src={googleLogin} />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Box sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', flexGrow: 1 }}>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/leaderboard\" exact component={Leaderboard} />\r\n          <Route path='/quiz/creator/:quiz_id' component={QuizCreate} />\r\n        </Switch>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}","C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\components\\constants.js",[],"C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\pages\\Leaderboard.js",["69"],"import React from 'react'\r\nimport Leaderboard_com from '../components/Leaderboard';\r\n\r\n\r\nfunction Leaderboard() {\r\n    //var listOfTopPlayers=[];\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"leaderboard-page\">\r\n            <div className=\"leaderboard-wrapper\">\r\n                <Leaderboard_com/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Leaderboard;\r\n","C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\pages\\QuizCreator.js",["70","71","72","73","74","75"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport { makeStyles, styled } from '@material-ui/core/styles';\r\nimport { Box, Button, FormControl, InputBase, TextField } from '@mui/material'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport * as constants from '../components/constants';\r\nimport Questions from '../components/Questions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  QuizContainer:{\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    width: '60vw'\r\n  },\r\n  Opt:{\r\n    display: 'inline-block',\r\n    width: '60vw',\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    alignItems: 'center'\r\n  },\r\n  duration:{\r\n    display: 'inline-block',\r\n    float: 'left',\r\n    fontSize: 16,\r\n    fontWeight: 'bold'\r\n  },\r\n  save:{\r\n    display: 'inline-block',\r\n    float: 'right',\r\n  },\r\n  title:{\r\n    borderTopLeftRadius: 15, \r\n    borderTopRightRadius: 15, \r\n    height: 60,\r\n    backgroundColor: \"#7d65c0\",\r\n  },\r\n  quizForm:{\r\n    borderRadius: 15,\r\n    borderTopLeftRadius: 15\r\n  },\r\n  noBorder: {\r\n    border: 'none',\r\n  }\r\n}))\r\n\r\n\r\nexport default function QuizCreate(props) {\r\n  const [state, setState] = useState({\r\n    quiz_name: '',\r\n  })\r\n  const [questions, setQuestions] = useState([]);\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const questionsRef = useRef();\r\n\r\n  const onSave = (e) => {\r\n    axios.put(`${constants.API_PATH}/quiz/${props.match.params.quiz_id}/creator`, {\r\n      quiz_fields: {...state}\r\n    }).then( res => {\r\n      // TODO: DO something after udpate\r\n    }).catch( err => {\r\n      console.log('PUT on Save: ', err);\r\n    })\r\n    let questions = questionsRef.current.getQuestions();\r\n    for ( let i = 0; i < questions.length; i++) {\r\n      console.log(questions[i])\r\n      axios.put(`${constants.API_PATH}/quiz/${props.match.params.quiz_id}/question`, {\r\n        question_fields: {\r\n          question_id: i,\r\n          quiz_id: props.match.params.quiz_id,\r\n          question_text: questions[i]\r\n        }\r\n      }).then( res => {\r\n        // TODO: DO something after udpate\r\n        \r\n      }).catch( err => {\r\n        console.log('PUT on Save: ', err);\r\n      })\r\n    }\r\n  };\r\n\r\n  const style = {\r\n    backgroundColor: '#ACACE1',\r\n    marginLeft: 10,\r\n    marginBottom: 10,\r\n    color: 'black'\r\n  }\r\n\r\n\r\n  const onDelete = (e) => {\r\n    axios.delete(`${constants.API_PATH}/quiz/${props.match.params.quiz_id}`)\r\n      .then( res => {\r\n        history.goBack()\r\n      }).catch( err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  const onTitleChange = (e) => {\r\n    setState({...state, quiz_name:e.target.value});\r\n  }\r\n  \r\n\r\n  useEffect(() => {\r\n    if(props.location.state == null){\r\n      axios.get(`${constants.API_PATH}/quiz/${props.match.params.quiz_id}`)\r\n      .then( res => {\r\n        //console.log(res);\r\n        setState({quiz_name: res.data.quiz.quiz_name})\r\n      }).catch( err => {\r\n        console.log(err);\r\n      })\r\n    }\r\n    else if(props.location.state){\r\n      setState({quiz_name: props.location.state.quiz.quiz_name})\r\n    }\r\n  }, [props]);\r\n\r\n  return (\r\n    <Box className={classes.QuizContainer}>\r\n      <Box className={classes.Opt} mt={10} >\r\n        <div className={classes.duration}>Duration: INF</div>\r\n        <Button size='small' variant='contained' style={style} className={classes.save}  onClick={onDelete}>Delete Quiz</Button>\r\n        <Button size='small' variant='contained' style={style} className={classes.save}  onClick={onSave}>Save Quiz</Button>\r\n      </Box>\r\n      <FormControl className={classes.quizform}>\r\n        <InputBase className={classes.title}\r\n          inputProps={{min: 0, \r\n            style: { textAlign: 'center', fontSize: 22, paddingTop:0, paddingBottom:0,\r\n              marginTop:10}}}\r\n          value={state.quiz_name}\r\n          onChange={onTitleChange}/>\r\n          <Questions ref={props, questionsRef}/>      \r\n      </FormControl>\r\n    </Box>\r\n  )\r\n}\r\n","C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\pages\\Home.js",["76","77"],"import React, { useEffect, useState  } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box, Button, Grid, Item } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Sidebar from '../components/Sidebar.js';\r\nimport * as constants from '../components/constants';\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n  homePage: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    flexGrow: 1,\r\n    wdith: '60vw'\r\n  },\r\n  gridContainer:{\r\n    marginTop: 30,\r\n    width: '60vw',\r\n  },\r\n  gridItem: {\r\n    display: 'inline-block'\r\n  }\r\n}))\r\nfunction Home(props) {\r\n  const [state, setState] = useState({\r\n    quizzes: null,\r\n  })\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    axios.get(constants.API_PATH + '/quiz')\r\n    .then( res => {\r\n      console.log(res);\r\n      setState({quizzes: res.data});\r\n    }).catch( err => {\r\n      //console.log(err);\r\n    })\r\n  }, []);\r\n    return (\r\n        <Box className=\"homePage\">\r\n          <Sidebar className={classes.drawer}/>\r\n          <Grid container spacing={10} className={classes.gridContainer}>\r\n            {state.quizzes?state.quizzes.map( quiz => (\r\n              <Grid item className={classes.gridItem}  key={quiz.quiz_id}>\r\n                <Link to={{pathname: `/quiz/creator/${quiz.quiz_id}`, \r\n                  quiz_id: quiz.quiz_id}} >{quiz.quiz_name}</Link>\r\n              </Grid>\r\n            )):<Grid item></Grid>}\r\n          </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\components\\Sidebar.js",[],"C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\components\\Questions.js",["78","79","80","81","82","83","84","85","86","87"],"import React, { useState, useEffect, forwardRef, useRef, useImperativeHandle } from 'react'\r\nimport { makeStyles, styled } from '@material-ui/core/styles';\r\nimport { Box, Button, FormControl, InputBase, TextField, IconButton, InputAdornment} from '@mui/material'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nfunction Questions(props, ref) {\r\n\r\n    const questionStyle = {\r\n        backgroundColor: '#ACACE1',\r\n        marginBottom: 10,\r\n        color: 'black'\r\n        \r\n      }\r\n      \r\n    const [questions, setQuestions] = useState([]);\r\n\r\n    const [question, setQuestionText] = useState({\r\n        question_text: '',\r\n    })\r\n\r\n    useImperativeHandle( ref, () => ({\r\n        getQuestions() {\r\n          return questions;\r\n        }\r\n      }));\r\n    //cretes new textbox\r\n    const addQuestion = (e) => {\r\n        let currentquestions = [...questions]\r\n        let newquestion = \"New question\";\r\n        currentquestions.push(newquestion);\r\n        setQuestions(currentquestions);\r\n    }\r\n    const removeQuestion = index => e => {\r\n      let currentquestions = [...questions]\r\n      currentquestions.splice(index,1)\r\n      setQuestions(currentquestions);\r\n  }\r\n\r\n    //updates list of questions\r\n    const onQuestionTextChange = index => e => {\r\n      let tempQuestions = [...questions];\r\n      setQuestionText({...question.question_text, question_text:e.target.value});\r\n      tempQuestions[index] = e.target.value;\r\n      setQuestions(tempQuestions);\r\n      }\r\n      \r\n    return(\r\n        //<Box sx={{ display: 'flex', flexDirection: 'column', flexGrow: 1, justifyContent: 'start' }}>\r\n        <Box>\r\n        {\r\n            questions.map((question, index) =>{\r\n              return (\r\n              <Box key={index}> \r\n              {index}. <TextField\r\n                inputProps={{min: 0, \r\n                    style: { textAlign: 'center', fontSize: 22, paddingTop:0, paddingBottom:0,\r\n                    marginTop:10}}}\r\n                    key={index}\r\n                value={questions[index]}\r\n                onChange={onQuestionTextChange(index)}\r\n                />\r\n                <Button variant='contained' onClick={removeQuestion(index)}>X</Button>\r\n                </Box>);\r\n            })}\r\n        <Button variant='contained' style={questionStyle} onClick={addQuestion} >Add question</Button>\r\n        \r\n        </Box>\r\n       // </Box>\r\n    );\r\n}\r\n\r\nexport default forwardRef(Questions);","C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\components\\Leaderboard.js",[],"C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\pages\\Platform.js",[],"C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\pages\\Profile.js",[],"C:\\Users\\geord\\Documents\\GitHub\\CSE416-Lavender-Client\\src\\components\\PlatformLead.js",[],{"ruleId":"88","severity":1,"message":"89","line":4,"column":34,"nodeType":"90","messageId":"91","endLine":4,"endColumn":39},{"ruleId":"88","severity":1,"message":"92","line":4,"column":41,"nodeType":"90","messageId":"91","endLine":4,"endColumn":47},{"ruleId":"88","severity":1,"message":"93","line":4,"column":49,"nodeType":"90","messageId":"91","endLine":4,"endColumn":53},{"ruleId":"88","severity":1,"message":"94","line":7,"column":27,"nodeType":"90","messageId":"91","endLine":7,"endColumn":33},{"ruleId":"95","severity":1,"message":"96","line":59,"column":22,"nodeType":"97","messageId":"98","endLine":59,"endColumn":24},{"ruleId":"99","severity":1,"message":"100","line":13,"column":17,"nodeType":"101","messageId":"102","endLine":13,"endColumn":35},{"ruleId":"88","severity":1,"message":"103","line":2,"column":22,"nodeType":"90","messageId":"91","endLine":2,"endColumn":28},{"ruleId":"88","severity":1,"message":"104","line":3,"column":47,"nodeType":"90","messageId":"91","endLine":3,"endColumn":56},{"ruleId":"88","severity":1,"message":"105","line":53,"column":10,"nodeType":"90","messageId":"91","endLine":53,"endColumn":19},{"ruleId":"88","severity":1,"message":"106","line":53,"column":21,"nodeType":"90","messageId":"91","endLine":53,"endColumn":33},{"ruleId":"88","severity":1,"message":"107","line":55,"column":9,"nodeType":"90","messageId":"91","endLine":55,"endColumn":17},{"ruleId":"108","severity":1,"message":"109","line":136,"column":32,"nodeType":"110","messageId":"111","endLine":136,"endColumn":33},{"ruleId":"88","severity":1,"message":"112","line":4,"column":15,"nodeType":"90","messageId":"91","endLine":4,"endColumn":21},{"ruleId":"88","severity":1,"message":"113","line":4,"column":29,"nodeType":"90","messageId":"91","endLine":4,"endColumn":33},{"ruleId":"88","severity":1,"message":"114","line":1,"column":27,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"115","line":1,"column":50,"nodeType":"90","messageId":"91","endLine":1,"endColumn":56},{"ruleId":"88","severity":1,"message":"116","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":20},{"ruleId":"88","severity":1,"message":"103","line":2,"column":22,"nodeType":"90","messageId":"91","endLine":2,"endColumn":28},{"ruleId":"88","severity":1,"message":"117","line":3,"column":23,"nodeType":"90","messageId":"91","endLine":3,"endColumn":34},{"ruleId":"88","severity":1,"message":"118","line":3,"column":36,"nodeType":"90","messageId":"91","endLine":3,"endColumn":45},{"ruleId":"88","severity":1,"message":"119","line":3,"column":58,"nodeType":"90","messageId":"91","endLine":3,"endColumn":68},{"ruleId":"88","severity":1,"message":"120","line":3,"column":70,"nodeType":"90","messageId":"91","endLine":3,"endColumn":84},{"ruleId":"88","severity":1,"message":"121","line":4,"column":10,"nodeType":"90","messageId":"91","endLine":4,"endColumn":20},{"ruleId":"88","severity":1,"message":"122","line":4,"column":22,"nodeType":"90","messageId":"91","endLine":4,"endColumn":33},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component Leaderboard_com must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'styled' is defined but never used.","'TextField' is defined but never used.","'questions' is assigned a value but never used.","'setQuestions' is assigned a value but never used.","'location' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Button' is defined but never used.","'Item' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'makeStyles' is defined but never used.","'FormControl' is defined but never used.","'InputBase' is defined but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'useHistory' is defined but never used.","'useLocation' is defined but never used."]